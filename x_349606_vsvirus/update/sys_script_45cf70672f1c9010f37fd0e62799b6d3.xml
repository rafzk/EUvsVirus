<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>kb_social_qa_question</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="kb_social_qa_question">x_349606_vsvirus_disease_tagVALCHANGES^ORx_349606_vsvirus_symptom_tagVALCHANGES^ORx_349606_vsvirus_treatment_tagVALCHANGES^EQ<item endquery="false" field="x_349606_vsvirus_disease_tag" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="false" field="x_349606_vsvirus_symptom_tag" goto="false" newquery="false" operator="VALCHANGES" or="true" value=""/>
            <item endquery="false" field="x_349606_vsvirus_treatment_tag" goto="false" newquery="false" operator="VALCHANGES" or="true" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>MC - Sync Tags</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	function getArrDisplay(table, fld) {
		var dsp_arr = [];
		var si_arr = current.getValue(fld) || '';
		si_arr = si_arr.split(',');

		for (var i = 0; i < si_arr.length; i++) {
			var si = si_arr[i];

			if (gs.nil(si))
				continue;

			var gr = new GlideRecord(table);

			if (gr.get(si)) {
				dsp_arr.push(gr.getDisplayValue());
			}
		}
		return dsp_arr;
	}

	var arr_tags = getArrDisplay('x_349606_vsvirus_symptom', 'x_349606_vsvirus_symptom_tag').concat(getArrDisplay('x_349606_vsvirus_disease', 'x_349606_vsvirus_disease_tag')).concat(getArrDisplay('x_349606_vsvirus_treatment', 'x_349606_vsvirus_treatment_tag'));
	gs.info('WR - Fix tags | arr_tags: ' + JSON.stringify(arr_tags));

	// Iterate through the tags
	for (var j = 0; j < arr_tags.length; j++) {
		var name_tag = arr_tags[j];

		if (gs.nil(name_tag))
			continue;

		var si_tag = '';

		var grSqandaTag = new GlideRecord('sqanda_tag');
		grSqandaTag.addActiveQuery();
		grSqandaTag.addQuery("name", name_tag);
		grSqandaTag.query();

		if (grSqandaTag.next()) {
			si_tag = grSqandaTag.getUniqueValue();
		}
		// Create Tag
		else {
			grSqandaTag.initialize();
			grSqandaTag.setValue('name', name_tag);
			si_tag = grSqandaTag.insert();
		}
		var si_article = current.getUniqueValue();
		// Check the tag has already been associated to the record
		var labelEntryGR = new GlideRecord("sqanda_tag_entry");
		labelEntryGR.addQuery("reference_id", si_article);
		labelEntryGR.addQuery("tag", si_tag);
		labelEntryGR.query();

		if (!labelEntryGR.hasNext()) {
			labelEntryGR.initialize();
			labelEntryGR.setValue("reference_name", "kb_social_qa_question");
			labelEntryGR.setValue("reference_id", si_article);
			// Need to use existing or create new
			labelEntryGR.setValue("tag", si_tag);
			labelEntryGR.insert();
		}
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>wrangu.andre</sys_created_by>
        <sys_created_on>2020-04-26 19:02:57</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>45cf70672f1c9010f37fd0e62799b6d3</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>MC - Sync Tags</sys_name>
        <sys_overrides/>
        <sys_package display_value="MediCast" source="x_349606_vsvirus">98e08a3a2f581010f37fd0e62799b6cf</sys_package>
        <sys_policy/>
        <sys_scope display_value="MediCast">98e08a3a2f581010f37fd0e62799b6cf</sys_scope>
        <sys_update_name>sys_script_45cf70672f1c9010f37fd0e62799b6d3</sys_update_name>
        <sys_updated_by>wrangu.andre</sys_updated_by>
        <sys_updated_on>2020-04-26 20:27:24</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=45cf70672f1c9010f37fd0e62799b6d3"/>
</record_update>
