<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_rel_widget_clone">
    <sp_rel_widget_clone action="INSERT_OR_UPDATE">
        <child display_value="MediCast Related Details">1cce939b2fd09010f37fd0e62799b648</child>
        <cloned>2020-04-26 11:58:47</cloned>
        <last_validated>2020-04-26 11:58:47</last_validated>
        <parent display_value="SQANDA Related Questions">a9e9de10d711120023c84f80de61035e</parent>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;sp_widget&gt;&lt;category&gt;other&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function () {
	var c = this;
	
	c.capitalize = function(str) {
		if (str.length === 0) return "";
		
		return str.charAt(0).toUpperCase() + str.slice(1); 
	}
}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;.stats-panel .stat-row {
  padding-bottom: 15px;
  &amp;amp;:last-child {
    padding: 0;
  }
}

.fa {
  width: 15px;
}

.related-question {
  padding-bottom: 15px;
  word-wrap: break-word;
}


.bottom-margin-small {
  margin-bottom: 10px;
}&lt;/css&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id&gt;sqanda-related-questions&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link/&gt;&lt;name&gt;SQANDA Related Questions&lt;/name&gt;&lt;option_schema/&gt;&lt;public&gt;true&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[// populate the 'data' object
// e.g., data.table = $sp.getValue('table');
(function() {
	data.knowledgeBase = $sp.getPortalRecord().getValue("sqanda_knowledge_base") || gs.getProperty("glide.service_portal.sqanda.default_kb");
	data.questionID = $sp.getParameter("question_id") || $sp.getParameter("sys_id");
	if (!data.questionID){
		var answerId = $sp.getParameter("answer_id");
		if (answerId) {
			var answer = new GlideRecord("kb_social_qa_answer");
			answer.get(answerId);
			data.questionID = answer.getValue('question');
		} else
			return;
	}

	var questionGR = new GlideRecord("kb_social_qa_question");
	if (questionGR.get(data.questionID)) {
		data.question = new Question(questionGR);

		//to make sure we dont return duplicate questions
		var foundQuestionIDs = [];

		foundQuestionIDs.push(data.question.sys_id);

		//just grab three of the tags... dont want this to go on for ages
		//if someone is an overzelous tagger
		data.tags = data.question.tags.slice(0, 3);

		data.tags.forEach(function(tag) {
			tag.questions = [];

			var tagEntryGR = new GlideRecord("sqanda_tag_entry");
			tagEntryGR.addQuery("tag", tag.sys_id);
			tagEntryGR.addQuery("reference_name", "kb_social_qa_question");
			tagEntryGR.query();

			var taggedQuestionIDs = [];
			while(tagEntryGR.next()) {
				taggedQuestionIDs.push(tagEntryGR.getValue('reference_id'));
			}
			
			var taggedQuestionGR = new GlideRecord("kb_social_qa_question");
			taggedQuestionGR.addQuery("kb_knowledge_base", data.knowledgeBase);
			taggedQuestionGR.addActiveQuery();
			taggedQuestionGR.addQuery("sys_id", "IN", taggedQuestionIDs.toString());
			taggedQuestionGR.query();

			var count = 0;
			while(taggedQuestionGR.next() &amp;&amp; count &lt; 5) {
				if (!contains(foundQuestionIDs, taggedQuestionGR.getUniqueValue())) {
					tag.questions.push(new Question(taggedQuestionGR));
					foundQuestionIDs.push(taggedQuestionGR.getUniqueValue());
					count++;
				}
			}
		});
		
		data.recentQuestions = [];
		var recentQuestionGR = new GlideRecord("kb_social_qa_question");
		recentQuestionGR.addQuery("kb_knowledge_base", data.knowledgeBase);
		recentQuestionGR.addActiveQuery();
		recentQuestionGR.orderByDesc('sys_created_on');
		recentQuestionGR.query();
		
		var count = 0;
		while(recentQuestionGR.next() &amp;&amp; count &lt; 10) {
			if (!contains(foundQuestionIDs, recentQuestionGR.getUniqueValue())) {
				data.recentQuestions.push(new Question(recentQuestionGR));
				foundQuestionIDs.push(recentQuestionGR.getUniqueValue());
				count++;
			}
		}

	}

	function Question(gr) {
		this.sys_created_on = gr.getValue("sys_created_on");
		this.question = gr.getValue("question");
		this.question_details = gr.getValue("question_details");
		this.sys_id = gr.getValue("sys_id");
		this.profile = new Profile(gr.getElement("profile").getRefRecord());

		this.subscribers = 0;
		var subscriberGR = new GlideRecordCounter("kb_social_qa_subscribe");
		subscriberGR.addQuery("question", this.sys_id);
		subscriberGR.query();
		this.subscribers = subscriberGR.getCount();
		
		var viewGR = new GlideRecord("kb_social_qa_view");
		viewGR.addQuery("question", this.sys_id);
		viewGR.query();
		this.views = viewGR.getRowCount();
		
		this.tags = [];
		var labelEntryGR = new GlideRecord("sqanda_tag_entry");
		labelEntryGR.addQuery('reference_id', this.sys_id);
		labelEntryGR.query();
		while(labelEntryGR.next())
			this.tags.push(new Tag(labelEntryGR.getElement('tag').getRefRecord()))
	}

	function Tag(gr) {
		this.sys_id = gr.getUniqueValue();
		this.name = gr.getValue('name');
	}

	function Profile(gr) {
		this.name = gr.getValue("name");
		this.sys_id = gr.getValue("sys_id");
		this.document = {
			sys_id: gr.getValue("document")
		};
	}
	
	function contains(arr, value) {
		for (var i = 0; i &lt; arr.length; i++) {
			if (arr[i].equals(value)) {
				return true;
			}
		}
		
		return false;
	}
})();]]&gt;&lt;/script&gt;&lt;servicenow&gt;true&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2016-01-27 22:50:07&lt;/sys_created_on&gt;&lt;sys_id&gt;a9e9de10d711120023c84f80de61035e&lt;/sys_id&gt;&lt;sys_mod_count&gt;126&lt;/sys_mod_count&gt;&lt;sys_name&gt;SQANDA Related Questions&lt;/sys_name&gt;&lt;sys_package display_value="Service Portal Social QA" source="com.glide.service-portal.sqanda"&gt;8f88dd7e2f141010f37fd0e62799b657&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_a9e9de10d711120023c84f80de61035e&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2017-08-24 19:14:43&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div&gt;
  &lt;div class="panel panel-default"&gt;
    &lt;div class="panel-heading"&gt;
    	&lt;h4 class="panel-title"&gt;${Question Stats}&lt;/h4&gt;
    &lt;/div&gt;
    &lt;div class="panel-body stats-panel"&gt;
      &lt;div class="stat-row"&gt;
        &lt;div class="fa fa-clock-o" aria-hidden="true"&gt;&lt;/div&gt;
        &lt;span class="stat-description"&gt;${Asked} &lt;sn-time-ago timestamp="data.question.sys_created_on"&gt;&lt;/sn-time-ago&gt;&lt;/span&gt;
      &lt;/div&gt;
      &lt;div class="stat-row"&gt;
        &lt;div class="fa fa-star" aria-hidden="true"&gt;&lt;/div&gt;
        &lt;span ng-if="data.question.subscribers != 1" class="stat-description"&gt;${{{data.question.subscribers}} Subscribers}&lt;/span&gt;
        &lt;span ng-if="data.question.subscribers == 1" class="stat-description"&gt;${{{data.question.subscribers}} Subscriber}&lt;/span&gt;
      &lt;/div&gt;
      &lt;div class="stat-row"&gt;
        &lt;div class="fa fa-eye" aria-hidden="true"&gt;&lt;/div&gt;
        &lt;span ng-if="data.question.views == 1" class="stat-description"&gt;${{{data.question.views}} View}&lt;/span&gt;
        &lt;span ng-if="data.question.views != 1" class="stat-description"&gt;${{{data.question.views}} Views}&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div ng-repeat="tag in data.tags" ng-if="tag.questions.length &gt; 0" class="panel panel-default"&gt;
    &lt;div class="panel-heading"&gt;
      &lt;h4 class="panel-title"&gt;${{{c.capitalize(tag.name)}} Questions}&lt;/h4&gt;
    &lt;/div&gt;
    &lt;div class="panel-body"&gt;
      &lt;div class="related-question" ng-repeat="question in tag.questions"&gt;
        &lt;a ng-href="?id=kb_social_qa_question&amp;sys_id={{question.sys_id}}"&gt;{{question.question}}&lt;/a&gt;
      &lt;/div&gt;
      &lt;a class="see-more text-muted" ng-href="?id=sqa_tagged_questions&amp;sys_id={{tag.sys_id}}"&gt;${See more related questions}&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div ng-if="data.recentQuestions.length &gt; 0" class="panel panel-default"&gt;
    &lt;div class="panel-heading"&gt;
      &lt;h4 class="panel-title"&gt;${Recent Questions}&lt;/h4&gt;
    &lt;/div&gt;
    &lt;div class="panel-body"&gt;
      &lt;div class="related-question" ng-repeat="question in data.recentQuestions"&gt;
        &lt;a ng-href="?id=kb_social_qa_question&amp;sys_id={{question.sys_id}}"&gt;{{question.question}}&lt;/a&gt;
      &lt;/div&gt;
      &lt;a class="text-muted" ng-href="?id=sqa_tagged_questions"&gt;${See more recent questions}&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;</payload>
        <sys_class_name>sp_rel_widget_clone</sys_class_name>
        <sys_created_by>wrangu.james</sys_created_by>
        <sys_created_on>2020-04-26 11:58:47</sys_created_on>
        <sys_id>d4ce939b2fd09010f37fd0e62799b64b</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>1cce939b2fd09010f37fd0e62799b648</sys_name>
        <sys_package display_value="MediCast" source="x_349606_vsvirus">98e08a3a2f581010f37fd0e62799b6cf</sys_package>
        <sys_policy/>
        <sys_scope display_value="MediCast">98e08a3a2f581010f37fd0e62799b6cf</sys_scope>
        <sys_update_name>sp_rel_widget_clone_d4ce939b2fd09010f37fd0e62799b64b</sys_update_name>
        <sys_updated_by>wrangu.james</sys_updated_by>
        <sys_updated_on>2020-04-26 11:58:47</sys_updated_on>
    </sp_rel_widget_clone>
</record_update>
